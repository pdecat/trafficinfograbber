buildscript {
    repositories {
        google()
    }
    dependencies {
        classpath 'me.moallemi.gradle:advanced-build-version:1.7.4'
    }
}

plugins {
    id 'com.android.application'
    id "com.github.hierynomus.license" version "0.16.1"
}

apply plugin: 'me.moallemi.advanced-build-version'

dependencies {
    implementation 'androidx.appcompat:appcompat:1.3.1'
    implementation 'com.google.android.material:material:1.4.0'
    implementation 'androidx.constraintlayout:constraintlayout:2.1.1'
    implementation 'androidx.navigation:navigation-fragment:2.3.5'
    implementation 'androidx.navigation:navigation-ui:2.3.5'
    testImplementation 'org.junit.jupiter:junit-jupiter:5.8.1'
    androidTestImplementation 'androidx.test.ext:junit:1.1.3'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.4.0'
}

advancedVersioning {
    nameOptions {
        versionMajor 1
        versionMinor 0
        versionPatch 2
    }
    codeOptions {
        versionCodeType 'AUTO_INCREMENT_ONE_STEP'
    }
    outputOptions {
        renameOutput true
    }
}

android {
    compileSdk 31

    defaultConfig {
        applicationId "org.decat.tig"
        minSdk 14
        targetSdk 31
        versionCode advancedVersioning.versionCode
        versionName advancedVersioning.versionName

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    signingConfigs {
        release {
            storeFile file(String.valueOf(System.getenv("KEYSTORE_PATH")))
            storePassword System.getenv("KEYSTORE_PASSWORD")
            keyAlias System.getenv("KEYSTORE_ALIAS")
            keyPassword System.getenv("KEYSTORE_ALIAS_PASSWORD")
        }
    }

    buildFeatures {
        viewBinding true
    }

    buildTypes {
        debug {
            applicationIdSuffix = ".debug"
        }

        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.release
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    lintOptions {
        abortOnError false
    }
}

advancedVersioning.renameOutputApk()

license {
    header = file('LICENSE.txt')
    header project.file('src/main/res/raw/license_short.txt')
    excludes([
            "**/recent_changes.txt",
    ])
    strictCheck true
}
